{"version":3,"sources":["webpack:///./src/components/AnnouncementRoll.js","webpack:///./src/pages/pre-clenov/index.js"],"names":["AnnouncementRoll","render","posts","this","props","data","allMarkdownRemark","edges","className","map","post","node","key","id","frontmatter","featuredpost","featuredimage","PreviewCompatibleImage","imageInfo","image","alt","title","to","fields","slug","date","excerpt","React","Component","query","count","AnnouncementIndexPage","Layout","style","backgroundImage","boxShadow","backgroundColor","color","padding"],"mappings":"mNAKMA,E,kGACJC,OAAA,WAAU,IAEOC,EADEC,KAAKC,MAAdC,KACsBC,kBAAtBC,MAER,OACE,yBAAKC,UAAU,wBACZN,GACCA,EAAMO,KAAI,gBAASC,EAAT,EAAGC,KAAH,OACR,yBAAKH,UAAU,wBAAwBI,IAAKF,EAAKG,IAC/C,6BACEL,UAAS,kDACPE,EAAKI,YAAYC,aAAe,cAAgB,KAGlD,gCACGL,EAAKI,YAAYE,cAChB,yBAAKR,UAAU,sBACb,kBAACS,EAAA,EAAD,CACEC,UAAW,CACTC,MAAOT,EAAKI,YAAYE,cACxBI,IAAI,qCAAsCV,EAAKI,YAAYO,UAI/D,KACJ,uBAAGb,UAAU,aACX,kBAAC,IAAD,CACEA,UAAU,mCACVc,GAAIZ,EAAKa,OAAOC,MAEfd,EAAKI,YAAYO,OAEpB,qCACA,0BAAMb,UAAU,+BACbE,EAAKI,YAAYW,QAIxB,2BACGf,EAAKgB,QACN,6BACA,6BACA,kBAAC,IAAD,CAAMlB,UAAU,SAASc,GAAIZ,EAAKa,OAAOC,MAAzC,iC,GA3CaG,IAAMC,WA+DtB,oBACb,kBAAC,IAAD,CACEC,MAAK,WA+BL5B,OAAQ,SAACI,EAAMyB,GAAP,OAAiB,kBAAC,EAAD,CAAkBzB,KAAMA,EAAMyB,MAAOA,QChG7CC,E,kGACnB9B,OAAA,WACE,OACE,kBAAC+B,EAAA,EAAD,KACE,yBACExB,UAAU,0CACVyB,MAAO,CACLC,gBAAgB,uCAGlB,wBACE1B,UAAU,iCACVyB,MAAO,CACLE,UAAW,0CACXC,gBAAiB,UACjBC,MAAO,QACPC,QAAS,SANb,sBAYF,6BAAS9B,UAAU,WACjB,yBAAKA,UAAU,aACb,yBAAKA,UAAU,WACb,kBAAC,EAAD,W,GAzBqCmB,IAAMC","file":"component---src-pages-pre-clenov-index-js-b316c595385901c7c45d.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Link, graphql, StaticQuery } from 'gatsby'\nimport PreviewCompatibleImage from './PreviewCompatibleImage'\n\nclass AnnouncementRoll extends React.Component {\n  render() {\n    const { data } = this.props\n    const { edges: posts } = data.allMarkdownRemark\n\n    return (\n      <div className=\"columns is-multiline\">\n        {posts &&\n          posts.map(({ node: post }) => (\n            <div className=\"is-parent column is-6\" key={post.id}>\n              <article\n                className={`blog-list-item tile is-child box notification ${\n                  post.frontmatter.featuredpost ? 'is-featured' : ''\n                }`}\n              >\n                <header>\n                  {post.frontmatter.featuredimage ? (\n                    <div className=\"featured-thumbnail\">\n                      <PreviewCompatibleImage\n                        imageInfo={{\n                          image: post.frontmatter.featuredimage,\n                          alt: `featured image thumbnail for post ${post.frontmatter.title}`,\n                        }}\n                      />\n                    </div>\n                  ) : null}\n                  <p className=\"post-meta\">\n                    <Link\n                      className=\"title has-text-primary is-size-4\"\n                      to={post.fields.slug}\n                    >\n                      {post.frontmatter.title}\n                    </Link>\n                    <span> &bull; </span>\n                    <span className=\"subtitle is-size-5 is-block\">\n                      {post.frontmatter.date}\n                    </span>\n                  </p>\n                </header>\n                <p>\n                  {post.excerpt}\n                  <br />\n                  <br />\n                  <Link className=\"button\" to={post.fields.slug}>\n                    Pokračovať v čítaní →\n                  </Link>\n                </p>\n              </article>\n            </div>\n          ))}\n      </div>\n    )\n  }\n}\n\nAnnouncementRoll.propTypes = {\n  data: PropTypes.shape({\n    allMarkdownRemark: PropTypes.shape({\n      edges: PropTypes.array,\n    }),\n  }),\n}\n\nexport default () => (\n  <StaticQuery\n    query={graphql`\n      query AnnouncementRollQuery {\n        allMarkdownRemark(\n          sort: { order: DESC, fields: [frontmatter___date] }\n          filter: { frontmatter: { templateKey: { eq: \"announcement\" } } }\n        ) {\n          edges {\n            node {\n              excerpt(pruneLength: 400)\n              id\n              fields {\n                slug\n              }\n              frontmatter {\n                title\n                templateKey\n                date(formatString: \"DD.MM.YYYY\")\n                featuredpost\n                featuredimage {\n                  childImageSharp {\n                    fluid(maxWidth: 120, quality: 100) {\n                      ...GatsbyImageSharpFluid\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    `}\n    render={(data, count) => <AnnouncementRoll data={data} count={count} />}\n  />\n)\n","import React from 'react'\n\nimport Layout from '../../components/Layout'\nimport AnnouncementRoll from '../../components/AnnouncementRoll'\n\nexport default class AnnouncementIndexPage extends React.Component {\n  render() {\n    return (\n      <Layout>\n        <div\n          className=\"full-width-image-container margin-top-0\"\n          style={{\n            backgroundImage: `url('/img/announcement-index.jpg')`,\n          }}\n        >\n          <h1\n            className=\"has-text-weight-bold is-size-1\"\n            style={{\n              boxShadow: '0.5rem 0 0 #074367, -0.5rem 0 0 #074367',\n              backgroundColor: '#074367',\n              color: 'white',\n              padding: '1rem',\n            }}\n          >\n            Oznamy pre členov\n          </h1>\n        </div>\n        <section className=\"section\">\n          <div className=\"container\">\n            <div className=\"content\">\n              <AnnouncementRoll />\n            </div>\n          </div>\n        </section>\n      </Layout>\n    )\n  }\n}\n"],"sourceRoot":""}